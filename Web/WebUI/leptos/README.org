* README
** Prerequsites for Leptos
*** Very beginning
**** Set up toolchains
#+BEGIN_SRC shell
  rustup toolchain install nightly
  rustup default nightly
  rustup target add wasm32-unknown-unknown
#+END_SRC
*** Install Leptos and run
**** For Leptos CSR
#+BEGIN_SRC shell
  cargo install cargo-generate
  cargo install trunk
  cargo init <project-name>
  cd <project-name>
  cargo add leptos --features=csr
  cargo add console_error_panic_hook
  trunk serve --open
#+END_SRC
**** For Leptos SSR
#+BEGIN_SRC shell
  cargo install cargo-leptos
  cargo leptos new --git https://github.com/leptos-rs/start
  cd <project-name>
  cargo leptos watch
#+END_SRC
**** For Leptos Code Formatting
#+BEGIN_SRC shell
  cargo install leptosfmt
#+END_SRC
** How to build and run this project
#+BEGIN_SRC shell
  cargo install
  trunk serve  # or `trunk serve --port 3000 --open`
#+END_SRC
** How to start a new project
*** Creating a new project
#+BEGIN_SRC shell
  cargo new {project_name}
  cd {project_name}
  touch Makefile.toml
  touch rust-toolchain.toml
  touch rustfmt.toml
#+END_SRC
Add =rust-toolchain.toml= contents below
#+BEGIN_SRC toml
  [toolchain]
    channel    = "nightly"
    components = ["clippy", "rust-analyzer", "rust-src", "rustfmt"]
    profile    = "default"
#+END_SRC
Add =rustfmt.toml= contents below
#+BEGIN_SRC toml
  # Stable options
  editon       = "2021"
  max_width    = 80
  # Unstable options
  format_code_in_doc_comments = true
  format_strings              = true
  group_imports               = "One"
  imports_granularity         = "Crate"
#+END_SRC
Add =Makefile.toml= contents below
#+BEGIN_SRC toml
  [tasks.build]
    args       = ["build"]
    command    = "cargo"
  [tasks.run]
    args       = ["run"]
    command    = "cargo"
  [tasks.test]
    args       = ["test"]
    command    = "cargo"
  [tasks.start]
    args       = ["serve", "--port", "3000"]
    command    = "trunk"
  [tasks.default]
    dependencies = [
      "build",
      "run",
      "test",
      "start",
    ]
#+END_SRC
#+BEGIN_SRC shell
  cargo make
  # or 
  cargo make build
  # or
  cargo make run
  # or
  cargo make test
#+END_SRC
*** Adding crates for =Leptos=
Add crates
#+BEGIN_SRC shell
  cargo add leptos        --features=csr,nightly
  cargo add leptos_meta   --features=csr,nightly
  cargo add leptos_router --features=csr,nightly
  cargo add console_error_panic_hook
#+END_SRC
*** Adding target for =Leptos=
Add crates
#+BEGIN_SRC shell
  rustup target add wasm32-unknown-unknown
#+END_SRC
*** Adding ~index.html~ file in ~$PROJECT_HOME~
#+BEGIN_SRC html
  <!DOCTYPE html>
  <html lang="en">
    <head>
      <emta charset="utf-8"/>
      <link data-trunk rel="rust" data-wasm-opt="z"/>
      <link data-trunk rel="icon" type="image/ico" href="/public/favicon.ico"/>
      <link data-trunk rel="tailwind-css" href="/style/tailwind.css"/>
      <title>Leptos CSR</title>
    </head>
    <body>
    </body>
  </html>
#+END_SRC
*** Modify ~src/main.rs~ file
#+BEGIN_SRC rust
  use leptos::*;
  fn main() {
    mount_to_body(|| view! {
      <p>
        "Hello, Leptos!"
      </p>
    })
  }
#+END_SRC
*** Create directores and add files to them
#+BEGIN_SRC shell
  mkdir public
  cp {somewhere} public/
  mkdir style
  cp {somewhere} style/
  touch tailwind.config.js
#+END_SRC
#+BEGIN_SRC js
  /** @type {import('tailwindcss').Config} */
  module.exports = {
    content: {
      files: ["*.html", "./src/**/*/rs"],
      transform: {
        rs: (content) => content.replace(/(?:^|\s)class:/g, ' '),
      },
    },
    theme: {
      extend: {},
    },
    plugins: [],
  }
#+END_SRC
** References
- [[brookjeynes.dev][https://brookjeynes.dev/posts/learning-leptos-part1/]]

